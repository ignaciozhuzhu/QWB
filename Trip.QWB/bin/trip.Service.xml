<?xml version="1.0"?>
<doc>
    <assembly>
        <name>trip.Service</name>
    </assembly>
    <members>
        <member name="M:Trip.Service.ActivityService.GetPaged(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取活动列表
            </summary>
            <param name="shopId">活动所属店铺编号</param>
            <param name="start">分页起始</param>
            <param name="length">分页大小</param>
            <returns>分页范围内的活动列表</returns>
        </member>
        <member name="M:Trip.Service.ActivityService.GetRecord(System.Int32,System.Nullable{System.Int32})">
            <summary>
            获取获奖记录
            </summary>
            <param name="id">记录编号</param>
            <param name="shopId">记录所属店铺编号</param>
            <returns>获奖记录</returns>
        </member>
        <member name="M:Trip.Service.ActivityService.DeleteRecord(Trip.Repository.Entities.ActivityRecordEntity)">
            <summary>
            删除获奖记录
            </summary>
            <param name="activityRecord">要删除的获奖记录</param>
        </member>
        <member name="M:Trip.Service.ActivityService.UpdateRecord(Trip.Repository.Entities.ActivityRecordEntity)">
            <summary>
            更新获奖记录
            </summary>
            <param name="activityRecord">要更新的获奖记录</param>
        </member>
        <member name="M:Trip.Service.ActivityService.DeleteRecord(System.Int32,System.Int32,System.Int32)">
            <summary>
            删除活动记录
            </summary>
            <param name="shopId"></param>
            <param name="activityId"></param>
            <param name="id"></param>
        </member>
        <member name="M:Trip.Service.ActivityService.GetByActivityId(System.Int32,System.Int32)">
            <summary>
            获取活动详情
            </summary>
            <param name="shopId"></param>
            <param name="activityId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ActivityService.UpdateActivity(Trip.Repository.Entities.ActivityEntity)">
            <summary>
            更新活动
            </summary>
            <param name="activity"></param>
        </member>
        <member name="M:Trip.Service.ActivityService.DeleteActivity(Trip.Repository.Entities.ActivityEntity)">
            <summary>
            删除活动
            </summary>
            <param name="activity"></param>
        </member>
        <member name="M:Trip.Service.ActivityService.Add(Trip.Repository.Entities.ActivityEntity,System.Collections.Generic.IList{Trip.Repository.Entities.ActivityPrizeEntity})">
            <summary>
            新建活动
            </summary>
            <param name="activity">要添加的活动信息</param>
            <param name="prizes">活动奖品</param>
        </member>
        <member name="M:Trip.Service.ActivityService.Update(System.Int32,System.Int32,System.String,System.DateTime,System.DateTime,System.String,System.Int32,System.Collections.Generic.IEnumerable{Trip.Repository.Entities.ActivityPrizeEntity},System.String,System.String,System.String,Trip.Repository.Entities.ActivityType,System.String,System.String,System.String,System.String)">
            <summary>
            更新活动
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.AuditBaseSetting`1.GetForInsertAudit(Trip.Repository.Entities.AuditEntity,`0)">
            <summary>
            获取新建操作的详细内容
            </summary>
        </member>
        <member name="M:Trip.Service.AuditBaseSetting`1.GetForUpdateAudit(Trip.Repository.Entities.AuditEntity,`0,`0)">
            <summary>
            获取修改操作的详细内容
            </summary>
            <param name="audit"></param>
            <param name="oldEntity"></param>
            <param name="newEntity"></param>
            <returns></returns>
        </member>
        <member name="P:Trip.Service.AuditBaseSetting`1.SimpleProperties">
            <summary>
            修改操作需要记录日志的属性列表
            </summary>
        </member>
        <member name="M:Trip.Service.AuditBaseSetting`1.IsEqual(System.Type,System.Object,System.Object)">
            <summary>
            判断两个对象是否相等
            </summary>
            <param name="dataType"></param>
            <param name="oldObj"></param>
            <param name="newObj"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.AuditManager`1.ForInsert(`0)">
            <summary>
            新增时添加日志
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Trip.Service.AuditManager`1.ForUpdate(`0,`0)">
            <summary>
            编辑时添加日志
            </summary>
            <param name="oldEntity"></param>
            <param name="newEntity"></param>
        </member>
        <member name="M:Trip.Service.AuditManager`1.Clone(`0)">
            <summary>
            复制一个对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.AuditManager`1.GetSettingByAuditObjectType(Trip.Repository.Entities.AuditObjectType)">
            <summary>
            获取日志具体设置
            </summary>
            <param name="ObjectType"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.AuditManager`1.InsertAudit(Trip.Repository.Entities.AuditEntity)">
            <summary>
            插入日志
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Trip.Service.AuditService.GetAllAudits(Trip.Repository.Entities.AuditObjectType,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取某项记录的所有修改记录
            </summary>
            <param name="type"></param>
            <param name="objectId"></param>
            <param name="start"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.LineAuditSetting`1.GetForInsertAudit(Trip.Repository.Entities.AuditEntity,`0)">
            <summary>
            获取添加日志
            </summary>
        </member>
        <member name="M:Trip.Service.LineAuditSetting`1.GetForInsertDetail(Trip.Repository.Entities.AuditDetailExt,`0)">
            <summary>
            获取添加时的详细内容
            </summary>
        </member>
        <member name="M:Trip.Service.LineAuditSetting`1.GetForUpdateAudit(Trip.Repository.Entities.AuditEntity,`0,`0)">
            <summary>
            获取修改日志
            </summary>
            <param name="audit"></param>
            <param name="oldEntity"></param>
            <param name="newEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderAuditSetting`1.GetForInsertAudit(Trip.Repository.Entities.AuditEntity,`0)">
            <summary>
            获取添加日志
            </summary>
        </member>
        <member name="M:Trip.Service.OrderAuditSetting`1.GetForInsertDetail(Trip.Repository.Entities.AuditDetailExt,`0)">
            <summary>
            获取添加时的详细内容
            </summary>
        </member>
        <member name="M:Trip.Service.OrderAuditSetting`1.GetForUpdateAudit(Trip.Repository.Entities.AuditEntity,`0,`0)">
            <summary>
            获取修改日志
            </summary>
            <param name="audit"></param>
            <param name="oldEntity"></param>
            <param name="newEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderAuditSetting`1.GetDisplayString(System.Type,System.Object,System.String)">
            <summary>
            获取显示的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.MemberExtensions.GetAllowCatalogIds(Trip.Repository.Entities.MemberEntity)">
            <summary>
            null表示拥有全部权限，count=0表示没有权限 TODO !!!
            </summary>
        </member>
        <member name="M:Trip.Service.AnnouncementService.UpdateAnnouncement(Trip.Repository.Entities.AnnouncementEntity)">
            <summary>
            更新公告
            </summary>
            <param name="announcement">公告</param>
        </member>
        <member name="M:Trip.Service.AnnouncementService.DeleteAnnouncement(Trip.Repository.Entities.AnnouncementEntity)">
            <summary>
            删除公告
            </summary>
            <param name="announcement">要删除的公告</param>
        </member>
        <member name="M:Trip.Service.AnnouncementService.InsertAnnouncement(Trip.Repository.Entities.AnnouncementEntity)">
            <summary>
            添加公告
            </summary>
            <param name="announcement">公告</param>
            <returns>公告编号</returns>
        </member>
        <member name="M:Trip.Service.AnnouncementService.InsertShopAnnouncement(Trip.Repository.Entities.ShopAnnouncementEntity)">
            <summary>
            添加店铺公告
            </summary>
            <param name="shopAnnouncement">店铺公告</param>
            <returns>店铺公告编号</returns>
        </member>
        <member name="M:Trip.Service.AnnouncementService.UpdateShopAnnouncement(Trip.Repository.Entities.ShopAnnouncementEntity)">
            <summary>
            更新店铺公告
            </summary>
            <param name="shopAnnouncement">店铺公告</param>
        </member>
        <member name="M:Trip.Service.AnnouncementService.GetPaged(System.Int32,System.Int32,System.String)">
            <summary>
            分页获取公告
            </summary>
        </member>
        <member name="M:Trip.Service.AnnouncementService.GetAnnouncementById(System.Int32)">
            <summary>
            根据编号获取公告
            </summary>
        </member>
        <member name="M:Trip.Service.AnnouncementService.GetShopAnnouncement(System.Int32,System.Int32)">
            <summary>
            获取店铺公告
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="announcementId">公告编号</param>
            <returns>店铺公告</returns>
        </member>
        <member name="M:Trip.Service.AnnouncementService.GetPagedOfShop(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取店铺公告
            </summary>
        </member>
        <member name="M:Trip.Service.ArticleService.GetArticlesCountByCatalog(System.Int32,Trip.Repository.Entities.CatalogEntity)">
            <summary>
            获取分类下文章数量[含隐藏]
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="catalog">分类</param>
            <returns>文章数量</returns>
        </member>
        <member name="M:Trip.Service.ArticleService.InsertArticle(Trip.Repository.Entities.ArticleEntity)">
            <summary>
            添加文章
            </summary>
            <param name="article">文章</param>
            <returns>文章编号</returns>
        </member>
        <member name="M:Trip.Service.ArticleService.UpdateArticle(Trip.Repository.Entities.ArticleEntity)">
            <summary>
            更新文章
            </summary>
            <param name="article"></param>
        </member>
        <member name="M:Trip.Service.ArticleService.GetAllArticles(System.Int32,System.Nullable{System.Int32},System.String,System.Int32,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            获取所有的文章，含分页
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="catalogId">分类编号</param>
            <param name="search">检索信息</param>
            <param name="pageOffset">分页开始行</param>
            <param name="pageSize">分页大小</param>
            <param name="isHidden">是否显示隐藏文章，传null获取所有</param>
            <returns>分页列表</returns>
        </member>
        <member name="M:Trip.Service.ArticleService.GetAllArticles(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            获取所有文章
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="catalogId">分类编号</param>
            <param name="isHidden">是否显示隐藏文章，传null获取所有</param>
            <returns>文章列表</returns>
        </member>
        <member name="M:Trip.Service.ArticleService.GetArticleById(System.Int32,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            根据店铺编号,文章编号获取文章
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="articleId">文章编号</param>
            <param name="isHidden">是否显示隐藏文章，传null获取所有</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.CatalogLibraryService.GetPaged(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取分类库
            </summary>
            <param name="parentId">父级编号</param>
            <param name="pageStart">分页起始</param>
            <param name="pageSize">分页大小</param>
            <returns>指定分页范围的分类库列表</returns>
        </member>
        <member name="M:Trip.Service.CatalogLibraryService.Delete(Trip.Repository.Entities.CatalogLibraryEntity)">
            <summary>
            删除分类库
            </summary>
            <param name="catalogLibrary">要删除的分类库</param>
        </member>
        <member name="M:Trip.Service.GuideLikeLogService.GetLikeCount(System.Int32,System.Int32)">
            <summary>
            获取微名片LIKE总数
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="gid">微名片编号</param>
            <returns>LIKE数量</returns>
        </member>
        <member name="M:Trip.Service.GuideLikeLogService.IsTodayLiked(System.Int32,System.Int32,System.String)">
            <summary>
            今天是否已LIKE
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="gid">微名片编号</param>
            <param name="ip">IP</param>
            <returns>是否LIKE</returns>
        </member>
        <member name="M:Trip.Service.GuideLikeLogService.InsertGuideLikeLog(Trip.Repository.Entities.GuideLikeLogEntity)">
            <summary>
            添加微名片赞日志
            </summary>
            <param name="guideLikeLog">日志</param>
            <returns>日志编号</returns>
        </member>
        <member name="M:Trip.Service.GuideService.GetGuideMemberView(System.Int32,System.Int32)">
            <summary>
            根据编号获取微名片
            </summary>
            <param name="shopId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.GuideService.GetProductContactGuides(System.Int32,System.Nullable{System.Int32},Trip.Repository.Entities.GuideType[])">
            <summary>
            根据catalogId, GuideType获取微名片信息
            </summary>
            <param name="shopId"></param>
            <param name="catalogId"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.GuideService.GetListByMobile(System.String)">
            <summary>
            根据手机号获取微名片列表
            </summary>
            <param name="mobile">手机号</param>
            <returns>该手机号下的所有微名片</returns>
        </member>
        <member name="M:Trip.Service.GuideService.InsertGuide(Trip.Repository.Entities.GuideExtEntity)">
            <summary>
            添加微名片
            </summary>
            <param name="guide"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.GuideService.ChangeDescription(System.Int32,System.Int32,System.String)">
            <summary>
            修改描述
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.ChangeAvatar(Trip.Repository.Entities.GuideExtEntity,System.String)">
            <summary>
            修改微名片头像
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.UpdateLastWeekRank(System.Int32,System.Int32)">
            <summary>
            更新上周排行榜
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="gidToReturnRank">可以返回目标微名片的排名</param>
            <returns>目标微名片的排名</returns>
        </member>
        <member name="M:Trip.Service.GuideService.NeedUpdateLastWeekRank(Trip.Repository.Entities.GuideExtEntity)">
            <summary>
            是否需要更新上周排名
            </summary>
            <param name="guide">微名片</param>
            <returns>是否更新</returns>
        </member>
        <member name="M:Trip.Service.GuideService.Delete(System.Int32,System.Int32)">
            <summary>
            删除微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.Bind(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            绑定微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.UnBind(System.Int32,System.Int32)">
            <summary>
            解除绑定
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.GetPaged(System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{Trip.Repository.Entities.GuideRole},System.Nullable{System.Int32})">
            <summary>
            分页获取微名片
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.GuideService.GetAll(System.Int32,System.Nullable{Trip.Repository.Entities.GuideRole})">
            <summary>
            获取所有微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.GetAllByDepartment(System.Int32,System.Int32)">
            <summary>
            获取部门下的所有微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.Get(System.Int32,System.Int32)">
            <summary>
            根据编号获取微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.GetOnlyById(System.Int32)">
            <summary>
            只根据ID获取微名片
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.GuideService.GetByWxId(System.Int32,System.String)">
            <summary>
            根据微信编号获取
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.GetByUnionWxId(System.Int32,System.String)">
            <summary>
            根据微信编号获取
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.GetByName(System.Int32,System.String)">
            <summary>
            按名称获取微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.GetByMobile(System.Int32,System.String)">
            <summary>
            按 手机 获取微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.Save(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,Trip.Repository.Entities.GuideRole,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,Trip.Repository.Entities.GuideType,System.String,System.String,System.String,System.String,Trip.Repository.Entities.GuideInfoExtEntity,System.Int32@,System.String@)">
            <summary>
            保存微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.IsGuideCountLimitReached(System.Int32)">
            <summary>
            是否达到微名片数量上线
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.IsMobileExist(System.Int32,System.String)">
            <summary>
            是否存在指定手机的微名片
            </summary>
        </member>
        <member name="M:Trip.Service.GuideService.UpdateGuideMemberInfo(System.Int32,System.Int32,Trip.Repository.Entities.MemberEntity,System.String,System.String,System.String,Trip.Repository.Entities.GuideType,System.String,System.String,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            更新微名片的帐号信息
            </summary>
        </member>
        <member name="M:Trip.Service.MemberService.GetPaged(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取账号信息
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="start">分页起始</param>
            <param name="length">分页大小</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.MemberService.GetRolePaged(System.Int32,System.Int32)">
            <summary>
            分页获取账号角色
            </summary>
            <param name="start">分页起始</param>
            <param name="length">分页大小</param>
            <returns>分页范围内的账号角色列表</returns>
        </member>
        <member name="M:Trip.Service.MemberService.UpdateMemberRole(System.Int32,System.String,System.String)">
            <summary>
            Update Member Role
            </summary>
        </member>
        <member name="M:Trip.Service.MemberService.GetByGid(System.Int32)">
            <summary>
            Get By Gid
            </summary>
        </member>
        <member name="M:Trip.Service.MemberService.InsertMemberRole(System.String,System.String)">
            <summary>
            Insert Member Role
            </summary>
        </member>
        <member name="M:Trip.Service.MemberService.GetMemberRoleName">
            <summary>
            Get Member Role Name
            </summary>
        </member>
        <member name="M:Trip.Service.MemberService.UpdatePassword(System.Int32,System.Int32,System.String)">
            <summary>
            Update Password
            </summary>
        </member>
        <member name="M:Trip.Service.MemberService.Get(Trip.Repository.Entities.ShopEntity,System.Int32)">
            <summary>
            Get
            </summary>
        </member>
        <member name="M:Trip.Service.OrderExtensions.BuildPassengers(Trip.Repository.Entities.ProductPlanEnterEntity,System.Int32)">
            <summary>
            根据提供的游客数量生成游客信息
            </summary>
            <param name="order"></param>
            <param name="passengerCount"></param>
        </member>
        <member name="M:Trip.Service.OrderExtensions.IncressPayOrderNo(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            增加新的支付订单号，防止支付请求失败
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:Trip.Service.OrderExtensions.GetPayOrderNo(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            获取支付用订单号
            </summary>
            <param name="order">订单</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.IsPayOrderNo(System.String)">
            <summary>
            是否是支付订单号
            </summary>
            <param name="orderNo"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.SetPayLimitPeriod(Trip.Repository.Entities.ProductPlanEnterEntity,System.Nullable{System.Int32})">
            <summary>
            设置支付时限
            </summary>
            <param name="order"></param>
            <param name="payLimitPeriod"></param>
        </member>
        <member name="M:Trip.Service.OrderExtensions.BuildOrderNo">
            <summary>
            生成订单号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.AgentCancelable(Trip.Repository.Entities.OrderViewEntity,System.Int32)">
            <summary>
            下家社不能取消已提交到上家社且已确认的订单
            </summary>
            <param name="order"></param>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.IsFromAgentOrder(Trip.Repository.Entities.ProductPlanEnterEntity,System.Int32)">
            <summary>
            判断是否是来自代理社的订单
            </summary>
            <param name="order"></param>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.IsAgentOrder(Trip.Repository.Entities.ProductPlanEnterEntity,System.Int32)">
            <summary>
            判断是否是代理其他社的订单
            </summary>
            <param name="order"></param>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.IsFromAgentOrder(Trip.Repository.Entities.OrderViewEntity,System.Int32)">
            <summary>
            判断是否是来自代理社的订单
            </summary>
            <param name="order"></param>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.IsFromMicroShop(Trip.Repository.Entities.OrderViewEntity,System.Int32)">
            <summary>
            是否来自平台微店的订单
            </summary>
            <param name="order"></param>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderExtensions.BuildRandomStr(System.Int32)">
            <summary>
            取随机数
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderPaymentService.PayedOnline(Trip.Repository.Entities.ProductPlanEnterEntity,Trip.Repository.Entities.ShopEntity,Trip.Repository.Request.OnlinePayContextInfo)">
            <summary>
            在线支付
            </summary>
        </member>
        <member name="M:Trip.Service.PickupService.GetPickupAreaById(System.Int32)">
            <summary>
            根据Id获取接送地区
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.PickupService.GetAllPickupAreasByShopId(System.Int32)">
            <summary>
            根据shopId获取所有接送配置
            </summary>
            <param name="ShopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.PickupService.DeletePickupArea(System.Int32)">
            <summary>
            删除接送地区
            </summary>
            <param name="Id"></param>
        </member>
        <member name="M:Trip.Service.PickupService.GetPickupLocationById(System.Int32)">
            <summary>
            根据Id获取接送点
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.PickupService.DeletePickupLocation(System.Int32)">
            <summary>
            删除接送点
            </summary>
            <param name="Id"></param>
        </member>
        <member name="M:Trip.Service.SalesPointService.GetAllSalesPoint(System.Int32)">
            <summary>
            获取所有可售站点
            </summary>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.SalesPointService.CreateSalesPoint(System.Int32,System.String,System.String)">
            <summary>
            添加可售站点
            </summary>
        </member>
        <member name="M:Trip.Service.SalesPointService.EditSalesPoint(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            更新可售站点
            </summary>
        </member>
        <member name="M:Trip.Service.ProductPickupService.GetProductPickupAreasByProductId(System.Int32)">
            <summary>
            获取产品接送地区
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductPickupService.GetProductPickupLocationsByProductId(System.Int32)">
            <summary>
            获取产品接送点
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductPickupService.GetProductPickupByProductId(System.Int32)">
            <summary>
            获取产品与接送地区所有对应关系
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductPickupService.SaveProductPickups(System.Int32,System.Collections.Generic.IList{System.Int32})">
            <summary>
            保存产品接送服务
            </summary>
            <param name="productId"></param>
            <param name="PickupAreaIds"></param>
        </member>
        <member name="M:Trip.Service.ProductPriceServcie.GetByVendorTeamId(System.String,System.Int32)">
            <summary>
            根据供应商编号获取开班
            </summary>
        </member>
        <member name="M:Trip.Service.ProductPriceServcie.DeleteProductPrice(Trip.Repository.Entities.ProductPriceEntity)">
            <summary>
            删除开班
            </summary>
            <param name="plan">要删除的开班</param>
        </member>
        <member name="M:Trip.Service.ProductPriceServcie.UpdateProductPrice(Trip.Repository.Entities.ProductPriceEntity)">
            <summary>
            更新开班
            </summary>
            <param name="plan">要更新的开班</param>
        </member>
        <member name="M:Trip.Service.ProductPriceServcie.InsertProductPrice(Trip.Repository.Entities.ProductPriceEntity)">
            <summary>
            添加开班
            </summary>
            <param name="plan">要添加的开班</param>
        </member>
        <member name="M:Trip.Service.ProductPriceServcie.GetProductrice(System.Int32,System.Nullable{System.Int32})">
            <summary>
            获取开班
            </summary>
            <param name="planId">开班编号</param>
            <param name="shopId">所属店铺编号，null表示忽略店铺判断</param>
            <returns>开班信息</returns>
        </member>
        <member name="M:Trip.Service.ProductPriceServcie.GetProductPrices(System.Int32,System.Int32)">
            <summary>
            获取线路下所有开班
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="productId">线路编号</param>
            <returns>符合条件的开班列表</returns>
        </member>
        <member name="M:Trip.Service.ProductPriceServcie.GetPaged(Trip.Repository.Request.GetPagedProductPlansViewRequest)">
            <summary>
            分页获取开班
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductExtensions.GetPreferentialPrice(Trip.Repository.Entities.ProductPriceLineEntity)">
            <summary>
            获取锦江优惠价格
            注意：此处如果优惠价小于零售价 则认为没有优惠价
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductExtensions.GetPreferentialAgentPrice(Trip.Repository.Entities.ProductPriceLineEntity)">
            <summary>
            获取锦江优惠代理价格
            注意：此处如果优惠价小于代理价 则认为没有优惠价
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductExtensions.GetRetailPrice(Trip.Repository.Entities.ProductPriceLineEntity)">
            <summary>
            获取零售价
            TODO 需要重新考虑
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductExtensions.Is1KuaiTicket(Trip.Repository.Entities.ProductEntity)">
            <summary>
            是否是1块门票
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductExtensions.IsProvideByZjCyts(Trip.Repository.Entities.ProductEntity)">
            <summary>
            是否由 中青旅 提供线路
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductExtensions.GetChildPriceLine(Trip.Repository.Entities.ProductPriceEntity)">
            <summary>
            获取儿童价格
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.TicketPlanService.GetTicketPlans(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            获取门票计划列表
            </summary>
        </member>
        <member name="M:Trip.Service.TicketPlanService.GetTicketPlan(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            获取门票计划
            </summary>
        </member>
        <member name="M:Trip.Service.TicketPlanService.InsertTicketPlan(Trip.Repository.Entities.TicketPlanEntity)">
            <summary>
            添加门票计划
            </summary>
            <param name="ticketPlan"></param>
        </member>
        <member name="M:Trip.Service.TicketPlanService.UpdateTicketPlan(Trip.Repository.Entities.TicketPlanEntity)">
            <summary>
            更新门票计划
            </summary>
            <param name="ticketPlan"></param>
        </member>
        <member name="M:Trip.Service.TicketPlanService.StickTicketPlan(Trip.Repository.Entities.TicketPlanEntity,System.Boolean)">
            <summary>
            置顶门票计划
            </summary>
            <param name="ticketPlan"></param>
            <param name="stick"></param>
        </member>
        <member name="M:Trip.Service.TicketPlanService.HideTicketPlan(Trip.Repository.Entities.TicketPlanEntity,System.Boolean)">
            <summary>
            隐藏门票计划
            </summary>
            <param name="ticketPlan"></param>
            <param name="hide"></param>
        </member>
        <member name="M:Trip.Service.TicketPlanService.DeleteTicketPlan(Trip.Repository.Entities.TicketPlanEntity)">
            <summary>
            删除门票计划
            </summary>
            <param name="ticketPlan"></param>
        </member>
        <member name="M:Trip.Service.TicketPlanService.UpdateTicketMinPrice(System.Int32)">
            <summary>
            更新门票最低价格
            </summary>
            <param name="ticketId"></param>
        </member>
        <member name="M:Trip.Service.TicketPlanService.IsTicketPlanInValidDate(Trip.Repository.Entities.TicketPlanEntity)">
            <summary>
            门票计划是否在有效期内
            </summary>
            <param name="ticketPlan"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.PushPlanService.InsertHistory(System.Int32,System.Int32,System.Int32,Trip.Repository.Entities.WeixinExtType,System.String,System.Int32,System.Int32)">
            <summary>
            添加一条推送历史记录
            </summary>
        </member>
        <member name="M:Trip.Service.PushPlanService.Get(System.Int32,System.Int32)">
            <summary>
            获取指定编号的推送计划
            </summary>
        </member>
        <member name="M:Trip.Service.PushPlanService.GetPaged(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取推送计划
            </summary>
        </member>
        <member name="M:Trip.Service.PushPlanService.Delete(Trip.Repository.Entities.PushPlanEntity)">
            <summary>
            删除推送一条计划
            </summary>
        </member>
        <member name="M:Trip.Service.PushPlanService.Add(Trip.Repository.Entities.PushPlanEntity)">
            <summary>
            添加一条推送计划
            </summary>
        </member>
        <member name="M:Trip.Service.PushPlanService.Pushed(System.Int32,System.Int32)">
            <summary>
            将推送计划设置为已推送
            </summary>
        </member>
        <member name="M:Trip.Service.PushPlanService.Pushed(Trip.Repository.Entities.PushPlanEntity)">
            <summary>
            将推送计划设置为已推送
            </summary>
        </member>
        <member name="M:Trip.Service.PushPlanService.GetAllToPush(System.DateTime,System.DateTime)">
            <summary>
            获取所有待推送的计划 TODO
            </summary>
        </member>
        <member name="M:Trip.Service.ServerProductService.GetDestinationCities(System.Int32)">
            <summary>
            获取目的地列表
            </summary>
        </member>
        <member name="M:Trip.Service.ServiceBase.Update(System.Object,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            实体更新
            </summary>
        </member>
        <member name="M:Trip.Service.ServiceBase.Insert(System.Object,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            实体添加
            </summary>
        </member>
        <member name="M:Trip.Service.CatalogService.GetPaged(System.Int32,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            获取分类列表 
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="parentCatalogId">父分类编号，null忽略</param>
            <param name="start">分页开始</param>
            <param name="length">分页大小</param>
            <returns>分类列表</returns>
        </member>
        <member name="M:Trip.Service.CatalogService.GetCatalogs(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Trip.Repository.Entities.CatalogType},System.Nullable{System.Boolean})">
            <summary>
            获取分类列表
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="parentCatalogId">父分类编号</param>
            <param name="type">分类类型</param>
            <param name="hide">隐藏状态</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.CatalogService.GetSubCatalogCount(System.Int32,System.Nullable{System.Int32})">
            <summary>
            获取子分类数量
            </summary>
            <param name="parentCatalogId"></param>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.CatalogService.GetCatalogBySkin(System.Int32,System.String)">
            <summary>
            根据皮肤获取特定分类
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="skin">皮肤</param>
            <returns>分类</returns>
        </member>
        <member name="M:Trip.Service.CatalogService.GetCatalogBySpecId(System.Int32,Trip.Repository.Entities.CatalogSpecId)">
            <summary>
            获取特殊分类 【todo】
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="catalogSpecId">特殊类别</param>
            <returns>分类</returns>
        </member>
        <member name="M:Trip.Service.CatalogService.Get(System.Int32,System.Nullable{System.Int32})">
            <summary>
            根据分类编号获取分类
            </summary>
            <param name="catalogId">分类编号</param>
            <param name="shopId">可选的分类所属店铺编号</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.CatalogService.InsertCatalog(Trip.Repository.Entities.CatalogEntity)">
            <summary>
            添加一条分类
            </summary>
            <param name="catalog">分类信息</param>
        </member>
        <member name="M:Trip.Service.CatalogService.UpdateCatalog(Trip.Repository.Entities.CatalogEntity)">
            <summary>
            更新一条分类
            </summary>
            <param name="catalog">分类信息</param>
        </member>
        <member name="M:Trip.Service.CatalogService.Hide(Trip.Repository.Entities.CatalogEntity,System.Boolean)">
            <summary>
            修改分类隐藏状态
            </summary>
            <param name="catalog">要修改的分类</param>
            <param name="isHide">状态</param>
        </member>
        <member name="M:Trip.Service.CatalogService.DeleteCatalog(Trip.Repository.Entities.CatalogEntity)">
            <summary>
            删除分类
            </summary>
            <param name="catalog"></param>
        </member>
        <member name="M:Trip.Service.CatalogService.UpdateCatalogOrder(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            分类排序
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="moveCatalogId">需要排序的分类编号</param>
            <param name="newOrderVal">新的排序值</param>
            <param name="originOrderVal">旧的排序值</param>
        </member>
        <member name="M:Trip.Service.CatalogService.GetTreeListOrderedOfDefaultType(System.Int32,Trip.Repository.Entities.ShopEntity,Trip.Repository.Entities.MemberEntity,System.Boolean,System.Boolean,System.String,Trip.Repository.Entities.CatalogType,System.Boolean)">
            <summary>
            分类 树形列表 【含父类的名称】
            </summary>
        </member>
        <member name="M:Trip.Service.CatalogService.ExpendCatalogId(System.Int32,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},Trip.Repository.Entities.ShopEntity)">
            <summary>
            展开 CatalogId，获取二级分类编号
            </summary>
        </member>
        <member name="M:Trip.Service.CatalogService.GetTreeListOfDefaultType(System.Int32,Trip.Repository.Entities.ShopEntity,Trip.Repository.Entities.MemberEntity,Trip.Repository.Entities.CatalogType)">
            <summary>
            分类 树形列表
            </summary>
        </member>
        <member name="M:Trip.Service.CommonDataService.Get(System.Int32)">
            <summary>
            根据编号获取常用数据
            </summary>
        </member>
        <member name="M:Trip.Service.CommonDataService.Add(Trip.Repository.Entities.CommonDataEntity)">
            <summary>
            添加常用数据
            </summary>
        </member>
        <member name="M:Trip.Service.CommonDataService.Edit(Trip.Repository.Entities.CommonDataEntity)">
            <summary>
            编辑常用数据
            </summary>
        </member>
        <member name="M:Trip.Service.CommonDataService.Delete(Trip.Repository.Entities.CommonDataEntity)">
            <summary>
            删除常用数据
            </summary>
        </member>
        <member name="M:Trip.Service.CommonDataService.GetAllByType(Trip.Repository.Entities.CommonDataType,System.Nullable{System.Int32})">
            <summary>
            指定类别的所有常用数据
            </summary>
        </member>
        <member name="M:Trip.Service.CommonDataService.GetPaged(System.Nullable{System.Int32},System.Int32,System.Int32,System.Boolean)">
            <summary>
            分页获取
            </summary>
        </member>
        <member name="M:Trip.Service.CommonDataService.GetFeedbackOrderInventoryConfig(System.Int32,Trip.Repository.Entities.CommonDataType,System.Boolean)">
            <summary>
            回馈单库存控制
            </summary>
        </member>
        <member name="M:Trip.Service.CustomerService.InsertCustomer(Trip.Repository.Entities.CustomerEntity)">
            <summary>
            添加会员
            </summary>
            <param name="customer">会员</param>
            <returns>会员编号</returns>
        </member>
        <member name="M:Trip.Service.CustomerService.UpdateCustomer(Trip.Repository.Entities.CustomerEntity)">
            <summary>
            更新会员
            </summary>
            <param name="customer">会员</param>
        </member>
        <member name="M:Trip.Service.CustomerService.DeleteCustomer(Trip.Repository.Entities.CustomerEntity)">
            <summary>
            删除会员
            </summary>
            <param name="customer"></param>
        </member>
        <member name="M:Trip.Service.CustomerService.CustomerInfoGuard(Trip.Repository.Entities.CustomerEntity)">
            <summary>
            会员信息数据有效性验证
            </summary>
            <param name="customer"></param>
        </member>
        <member name="M:Trip.Service.CustomerService.GetNotifyHistories(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取会员的行程通知
            </summary>
        </member>
        <member name="M:Trip.Service.CustomerService.GetPaged(System.Int32,System.Int32,System.Int32,System.String,System.Nullable{Trip.Repository.Entities.CustomerType})">
            <summary>
            分页获取会员 如果CustomerType = null, 则不取 普通会员
            </summary>
        </member>
        <member name="M:Trip.Service.CustomerService.GetCustomerByCustomerId(System.Int32,System.Int32)">
            <summary>
            根据编号获取会员
            </summary>
        </member>
        <member name="M:Trip.Service.CustomerService.GetCustomerByMobile(System.Int32,System.String)">
            <summary>
            根据手机号获取会员
            </summary>
        </member>
        <member name="M:Trip.Service.CustomerService.GetCustomerByWxId(System.Int32,System.String)">
            <summary>
            通过 WxId 获取会员
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="wxId">微信编号</param>
            <returns>会员</returns>
        </member>
        <member name="M:Trip.Service.CustomerService.GetCustomerByUnionWxId(System.Int32,System.String)">
            <summary>
            通过 UnionWxId 获取会员
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="unionWxId">UnionWxId</param>
            <returns>会员</returns>
        </member>
        <member name="M:Trip.Service.DepartmentService.InsertDepartment(Trip.Repository.Entities.DepartmentEntity)">
            <summary>
            添加部门
            </summary>
            <param name="department">部门</param>
            <returns>部门编号</returns>
        </member>
        <member name="M:Trip.Service.DepartmentService.UpdateDepartment(Trip.Repository.Entities.DepartmentEntity)">
            <summary>
            更新部门
            </summary>
            <param name="department">部门</param>
        </member>
        <member name="M:Trip.Service.DepartmentService.GetDepartmentByDepartmentId(System.Int32,System.Int32)">
            <summary>
            根据编号获取
            </summary>
        </member>
        <member name="M:Trip.Service.DepartmentService.GetAll(System.Int32)">
            <summary>
            获取 所有部门
            </summary>
        </member>
        <member name="M:Trip.Service.DepartmentService.ExpendDepartmentId(System.Int32,System.Int32)">
            <summary>
            展开部门编号 列出下级部门编号
            </summary>
        </member>
        <member name="M:Trip.Service.DepartmentService.HaveGuide(System.Int32,System.Int32)">
            <summary>
            部门下是否已有员工
            </summary>
        </member>
        <member name="M:Trip.Service.DepartmentService.HaveSub(System.Int32,System.Int32)">
            <summary>
            部门下是否已有子部门
            </summary>
        </member>
        <member name="M:Trip.Service.LineSupplierService.GetAllLineSupplier(System.Int32)">
            <summary>
            获取所有线路供应商
            </summary>
        </member>
        <member name="M:Trip.Service.LineSupplierService.CreateLineSupplier(System.Int32,System.String,System.String)">
            <summary>
            添加供应商信息
            </summary>
        </member>
        <member name="M:Trip.Service.LineSupplierService.EditLineSupplier(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            更新供应商信息
            </summary>
        </member>
        <member name="M:Trip.Service.MemberManageService.UpdateMember(Trip.Repository.Entities.MemberEntity)">
            <summary>
            更新账号
            </summary>
            <param name="member">账号</param>
        </member>
        <member name="M:Trip.Service.MemberManageService.InsertMember(Trip.Repository.Entities.MemberEntity)">
            <summary>
            添加账号
            </summary>
            <param name="member">账号</param>
            <returns>账号编号</returns>
        </member>
        <member name="M:Trip.Service.MemberManageService.DeleteMember(Trip.Repository.Entities.MemberEntity)">
            <summary>
            删除账号
            </summary>
            <param name="member">账号</param>
        </member>
        <member name="M:Trip.Service.MemberManageService.GetMemberByMemberId(Trip.Repository.Entities.ShopEntity,System.Int32)">
            <summary>
            根据编号获取
            </summary>
        </member>
        <member name="M:Trip.Service.MemberManageService.GetMemberByMemberName(System.Int32,System.String)">
            <summary>
            根据名称获取账号
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="name">账号名</param>
            <returns>账号</returns>
        </member>
        <member name="M:Trip.Service.MemberManageService.GetPagedOfBusiness(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取同业帐号
            </summary>
        </member>
        <member name="M:Trip.Service.MemberManageService.GetContactPeople(Trip.Repository.Entities.ShopEntity,System.Int32)">
            <summary>
            获取联系人信息
            </summary>
        </member>
        <member name="M:Trip.Service.MemberManageService.GetContactPeople(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            获取联系人信息
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.Get1KuaiTicketOrderQty(System.Int32,System.Int32)">
            <summary>
            获取1块的已报名数量
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.SetPrizeCode(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置中奖码
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetTicketOrderQty(System.Int32,System.Int32,System.Nullable{System.Int32},System.DateTime,System.String,System.Nullable{Trip.Repository.Entities.ProductPlanEnterPayStatus})">
            <summary>
            获取身份证号在出行日期的订单数量
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrders(Trip.Repository.Entities.OrderType,Trip.Repository.Entities.ProductPlanEnterState)">
            <summary>
            根据订单类型，订单状态获取订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrdersByMobile(System.Int32,System.String)">
            <summary>
            根据手机号获取订单
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="mobile">手机号</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderService.CancelOutdateUnPaiedOrder">
            <summary>
            取消过期的未支付订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetAllOutdateUnPaiedOrder(System.Nullable{System.Int32})">
            <summary>
            获取所有过期未支付的订单
            </summary>
            <param name="shopId">店铺编号</param>
            <returns>订单列表</returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetAllPayExpiringOrders">
            <summary>
            获取所有支付时限即将到期的订单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrderByOrderId(System.Int32,System.Int32)">
            <summary>
            根据订单编号获取订单信息
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="orderId">订单编号</param>
            <returns>订单信息</returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrderByVendorOrderNo(System.Int32,System.String)">
            <summary>
            根据第三方订单编号获取订单信息
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="vendorOrderNo">第三方订单编号</param>
            <returns>订单信息</returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrderByOrderNo(System.Int32,System.String)">
            <summary>
            根据单号获取
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="orderNo">单号</param>
            <returns>订单</returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetByPayOrderNo(System.Int32,System.String)">
            <summary>
            根据支付单号获取
            </summary>
            <param name="shopId">订单所属店铺编号</param>
            <param name="payOrderNo">支付订单号</param>
            <returns>订单</returns>
        </member>
        <member name="M:Trip.Service.OrderService.Get(System.Int32,System.Int32)">
            <summary>
            根据编号获取订单
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="id">订单编号</param>
            <returns>订单</returns>
        </member>
        <member name="M:Trip.Service.OrderService.DeleteOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            删除订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.DeleteAgentOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            删除来自代理社的订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetAllTourNotifyEnters(System.Int32,System.Int32)">
            <summary>
            获取所有需要推送的订单，即该订单有关联的会员
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="planId">开班编号</param>
            <returns>订单列表</returns>
        </member>
        <member name="M:Trip.Service.OrderService.IsExist(System.Int32,System.String)">
            <summary>
            给定 订单号是否存在
            </summary>
            <param name="shopId"></param>
            <param name="orderNo"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrderPriceLines(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            获取订单价格项
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrdersByCustomer(System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            获取会员订单
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="orderCustomerId">会员编号</param>
            <param name="productId">产品编号</param>
            <returns>订单列表</returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrdersByOrderGuide(System.Int32,System.Int32)">
            <summary>
            获取微名片代下单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrdersBySourceGuide(System.Int32,System.Int32)">
            <summary>
            获取来源微名片订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.GetGuideAllOrders(System.Int32,System.Int32)">
            <summary>
            获取微名片的所有相关订单（包括来源微名片与代下单）
            </summary>
            <param name="shopId"></param>
            <param name="GuideId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.OrderService.GetOrders(Trip.Repository.Request.GetOrdersRequest)">
            <summary>
            分页获取订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.InsertOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            添加订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.InsertTicketOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            添加门票订单
            TODO 增加事务处理
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:Trip.Service.OrderService.UpdateOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            更新订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.CancelOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            取消订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.ConfirmPay(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            确认订单可支付
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:Trip.Service.OrderService.FinishOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            完成订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.ConfirmOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            确认订单
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.RefuseOrder(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            退订
            </summary>
        </member>
        <member name="M:Trip.Service.OrderService.OrderInfoGuard(Trip.Repository.Entities.ProductPlanEnterEntity)">
            <summary>
            验证订单信息
            </summary>
        </member>
        <member name="M:Trip.Service.ProductService.GetDepartureCities(System.Int32)">
            <summary>
            获取店铺所有出发城市
            </summary>
            <param name="shopId">店铺编号</param>
            <returns>出发城市列表</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetDestinationCities(System.Int32)">
            <summary>
            获取店铺所有目的地
            </summary>
            <param name="shopId">店铺编号</param>
            <returns>目的地列表</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetVendorProducts(System.Int32)">
            <summary>
            获取所有供应商产品
            </summary>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetVisaCountries(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            获取签证国家
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="isHidden">隐藏状态</param>
            <param name="isSale">销售状态</param>
            <param name="isOffLine"></param>
            <returns>签证国家列表</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetProductByProductGenre(System.Int32,Trip.Repository.Entities.ProductGenre)">
            <summary>
            获取特殊产品 ， 会员
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="genre">产品类别</param>
            <returns>产品</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetAllProductsByProductGenre(System.Int32,Trip.Repository.Entities.ProductGenre,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            获取特定类别的所有产品
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="productGenre">产品类别</param>
            <param name="isHidden">隐藏状态</param>
            <param name="isSale">销售状态</param>
            <param name="isOffLine"></param>
            <returns>产品列表</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetProductByProductId(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Get Product
            </summary>
        </member>
        <member name="M:Trip.Service.ProductService.GetProductByVendorId(System.Int32,System.String)">
            <summary>
            获取供应商产品
            </summary>
            <param name="shopId"></param>
            <param name="vendorId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetProductExtByProductId(System.Int32)">
            <summary>
            Get Product Ext
            </summary>
            <param name="productId">Product Id</param>
            <returns>Product Ext</returns>
        </member>
        <member name="M:Trip.Service.ProductService.InsertProduct(Trip.Repository.Entities.ProductEntity)">
            <summary>
            Add Product
            </summary>
            <param name="product">Proudct info</param>
            <returns>New Product Id</returns>
        </member>
        <member name="M:Trip.Service.ProductService.UpdateProduct(Trip.Repository.Entities.ProductEntity)">
            <summary>
            Update Product
            </summary>
            <param name="product">Product Info</param>
        </member>
        <member name="M:Trip.Service.ProductService.InsertProductExt(Trip.Repository.Entities.ProductExtEntity)">
            <summary>
            添加产品扩展
            </summary>
            <param name="productExt">要添加的产品扩展</param>
            <returns>自动生成的产品扩展编号</returns>
        </member>
        <member name="M:Trip.Service.ProductService.UpdateProductExt(Trip.Repository.Entities.ProductExtEntity)">
            <summary>
            更新产品扩展信息
            </summary>
            <param name="productExt">要更新的产品扩展</param>
        </member>
        <member name="M:Trip.Service.ProductService.GetTagsByProductId(System.Int32)">
            <summary>
            根据产品编号获取所有关联标签
            </summary>
            <param name="productId">产品编号</param>
            <returns>产品的标签列表</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetTransportServices(Trip.Repository.Entities.ProductEntity)">
            <summary>
            获取线路的所有交通服务
            </summary>
        </member>
        <member name="M:Trip.Service.ProductService.GetProductsBySearchWithFilter(System.Int32,Trip.Repository.Entities.ProductFilter,System.Boolean,System.Collections.Generic.IList{System.String}@)">
            <summary>
            线路检索（带筛选）
            </summary>
            <param name="shopId"></param>
            <param name="filter"></param>
            <param name="onDescription"></param>
            <param name="AllDepartureCity"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetAllProductsByCatalog(System.Int32,Trip.Repository.Entities.CatalogEntity,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Int32,System.Int32,System.Nullable{Trip.Repository.Entities.ProductGenre},System.Nullable{System.Boolean})">
            <summary>
            获取分类下的线路
            </summary>
            <param name="shopId">当前店铺</param>
            <param name="catalog">分类</param>
            <param name="isHidden">隐藏状态</param>
            <param name="isSale">销售状态</param>
            <param name="start">分页开始</param>
            <param name="length">分页大小</param>
            <param name="isOffLine"></param>
            <param name="genre"></param>
            <returns>线路列表</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetProductsByCatalog(System.Int32,Trip.Repository.Entities.CatalogEntity,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{Trip.Repository.Entities.ProductGenre},System.Nullable{System.Boolean})">
            <summary>
            获取分类下的线路 通过salespoint 筛选
            </summary>
            <param name="shopId">当前店铺</param>
            <param name="catalog">分类</param>
            <param name="isHidden">隐藏状态</param>
            <param name="isSale">销售状态</param>
            <param name="start">分页开始</param>
            <param name="length">分页大小</param>
            <param name="salesPoint">可售点</param>
            <param name="genre"></param>
            <param name="isOffLine"></param>
            <returns>线路列表</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetProductsCountByCatalog(System.Int32)">
            <summary>
            获取分类下产品数量 [含隐藏线路]
            </summary>
            <param name="catalogId">分类编号</param>
            <returns>产品数量</returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetAllDepartureCities(System.Int32)">
            <summary>
            后台线路库获取所有出发地
            </summary>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductService.GetAllDestinations(System.Int32)">
            <summary>
            后台线路库获取所有目的地
            </summary>
            <param name="shopId"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ProductService.SaveProductTags(System.Int32,System.Int32,System.Collections.Generic.IList{System.String})">
            <summary>
            保存产品标签
            </summary>
            <param name="productId">产品编号</param>
            <param name="shopId">店铺编号</param>
            <param name="tagNames">标签名称</param>
        </member>
        <member name="M:Trip.Service.ProductService.GetTourNo(System.DateTime,System.String,System.Int32,System.String)">
            <summary>
            生成团号
            </summary>
        </member>
        <member name="M:Trip.Service.ShopExtensions.GetResourceShopId(Trip.Repository.Entities.ShopEntity)">
            <summary>
            小小号，线路，文章，分类，返回归属旅行社的店铺编号
            </summary>
        </member>
        <member name="M:Trip.Service.ShopExtensions.GetB2BPlatformShopId(Trip.Repository.Entities.ShopEntity)">
            <summary>
            获取平台微店所属的B2B平台社ID
            </summary>
            <param name="shop"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ShopService.GetB2BPlatformShops">
            <summary>
            获取所有B2B平台社
            </summary>
        </member>
        <member name="M:Trip.Service.ShopService.InsertShop(Trip.Repository.Entities.ShopEntity)">
            <summary>
            添加店铺
            </summary>
        </member>
        <member name="M:Trip.Service.ShopService.UpdateShop(Trip.Repository.Entities.ShopEntity)">
            <summary>
            更新店铺
            </summary>
        </member>
        <member name="M:Trip.Service.ShopService.IsShopAgentExited(System.Int32,System.Int32)">
            <summary>
            判断Id等于shopId的店铺是否被id为agentId的店铺代理
            </summary>
        </member>
        <member name="M:Trip.Service.ShopService.SyncDisplayInfoToLittleShop(Trip.Repository.Entities.ShopEntity)">
            <summary>
            同步小小号显示信息(平台微店共用)
            </summary>  
        </member>
        <member name="M:Trip.Service.SurveyService.GetPaged(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取调查问卷
            </summary>
            <param name="shopId">所属店铺编号</param>
            <param name="start">分页开始</param>
            <param name="length">分页大小</param>
            <returns>分页的调查问卷列表</returns>
        </member>
        <member name="M:Trip.Service.SurveyService.Delete(Trip.Repository.Entities.SurveyEntity)">
            <summary>
            删除问卷
            </summary>
            <param name="survey">要删除的问卷</param>
        </member>
        <member name="M:Trip.Service.SurveyService.GetByLineNo(System.Int32,System.String)">
            <summary>
            根据线路号获取相关问卷
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="lineNo">线路号</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.TourNotifyService.InsertTourNotify(Trip.Repository.Entities.TourNotifyEntity)">
            <summary>
            添加行程通知
            </summary>
            <param name="tourNotify"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.TourNotifyService.UpdateTourNotify(Trip.Repository.Entities.TourNotifyEntity)">
            <summary>
            更新行程通知
            </summary>
            <param name="tourNotify"></param>
        </member>
        <member name="M:Trip.Service.TourNotifyService.DeleteTourNotify(Trip.Repository.Entities.TourNotifyEntity)">
            <summary>
            删除行程通知
            </summary>
            <param name="tourNotify"></param>
        </member>
        <member name="M:Trip.Service.TourNotifyService.InsertTourNotifyHistory(Trip.Repository.Entities.TourNotifyHistoryEntity)">
            <summary>
            添加行程通知历史
            </summary>
            <param name="tourNotifyHistory">通知历史</param>
            <returns>行程通知历史编号</returns>
        </member>
        <member name="M:Trip.Service.TourNotifyService.GetPaged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取 团队通知
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="planId">开班编号</param>
            <param name="pageStart">分页开始</param>
            <param name="pageSize">分页大小</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.TourNotifyService.Get(System.Int32,System.Int32)">
            <summary>
            获取推送通知
            </summary>
        </member>
        <member name="M:Trip.Service.TourNotifyService.GetAll(System.DateTime,System.DateTime,System.Nullable{System.Boolean})">
            <summary>
            根据推送时间范围获取推送通知 
            </summary>
            <param name="beginPlanDate">开始计划推送时间</param>
            <param name="endPlanDate">结束计划推送时间</param>
            <param name="isPushed">是否已推送</param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ValidationCodeService.Insert(Trip.Repository.Entities.ValidationCodeEntity)">
            <summary>
            添加一条验证码数据
            </summary>
            <param name="validationCode"></param>
            <returns></returns>
        </member>
        <member name="M:Trip.Service.ValidationCodeService.MarkUsed(Trip.Repository.Entities.ValidationCodeEntity)">
            <summary>
            标记验证码已使用
            </summary>
            <param name="validationCode">要标记的验证码</param>
        </member>
        <member name="M:Trip.Service.WeixinMaterialService.Delete(System.Int32,System.Int32)">
            <summary>
            删除素材
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="id">素材编号</param>
        </member>
        <member name="M:Trip.Service.WeixinMaterialService.GetPaged(System.Int32,Trip.Repository.Entities.WeixinMaterialType,System.Int32,System.Int32)">
            <summary>
            分页获取微信素材
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="materialType">素材类型</param>
            <param name="pageStart">分页开始</param>
            <param name="pageSize">分页大小</param>
            <returns>分页的微信素材</returns>
        </member>
        <member name="M:Trip.Service.WeixinMaterialService.Get(System.Int32,System.Int32)">
            <summary>
            根据编号获取微信素材
            </summary>
            <param name="shopId">店铺编号</param>
            <param name="id">素材编号</param>
            <returns>微信素材</returns>
        </member>
        <member name="M:Trip.Service.WeixinMaterialService.AddArticles(Trip.Service.AddWeixinMaterialArticlesRequest)">
            <summary>
            添加图文微信素材
            </summary>
            <param name="request">请求数据</param>
            <returns>素材编号</returns>
        </member>
        <member name="M:Trip.Service.WeixinMaterialService.InsertWeixinMaterial(Trip.Repository.Entities.WeixinMaterialEntity)">
            <summary>
            添加微信图文消息
            </summary>
            <param name="weixinMaterial">图文资源</param>
            <returns>编号</returns>
        </member>
        <member name="M:Trip.Service.WeixinMaterialService.EditArticles(Trip.Service.EditWeixinMaterialArticlesRequest)">
            <summary>
            编辑图文微信素材
            </summary>
            <param name="request">请求数据</param>
        </member>
        <member name="P:Trip.Service.EditWeixinMaterialArticleRequest.ThumbMaterialId">
            <summary>
            修改缩略图时此值为Null
            </summary>
        </member>
        <member name="M:Trip.Service.WIFIService.AddOrder(System.DateTime,System.DateTime,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean,Trip.Core.ILogger,System.String@)">
            <summary>
            添加一条订单
            </summary>
        </member>
    </members>
</doc>
